ceph.trait <- ceph.trait[pruned.tree$tip.label,] #resorts trait dataset to the tree tip labels
ceph.trait$BL_species <- as.character(ceph.trait$BL_species)
ceph.trait$BL_species <- factor(ceph.trait$BL_species)
smtree <- make.simmap(multi2di(pruned.tree, random=FALSE), setNames(ceph.trait$BL_species, pruned.tree$tip.label), nsim=100)
#mean aics for each model
aics <- t(sapply(fits, function(x) sapply(x, function(y) y$AIC)))
#aicsouv <- sapply(ouv_fits, function(x) x$AIC)
#aics <- cbind(aics, aicsouv)
colnames(aics) <- c("BM1", "BMS", "OU1", "OUM", "OUMV", "OUMA", "OUMVA", "OUV")
aics[aics < -20] <- NA
boxplot(aics, ylim=c(530,680), xlab="Model",ylab="AICc", cex.lab=1, cex.xaxt=2)
kable(aics, caption = "AIC values for each run of each model") #prints individual AICc runs to a table
kable(apply(aics, 2, mean, na.rm=TRUE), caption = "Mean AIC values for each model") #prints mean AIC for each model
fits <- lapply(1:length(fits), function(x) c(fits[[x]])) #takes only fits for which AIC are not NA
original_fits <- fits
fits <- original_fits
#paremeter estimates for each evolutionary model
parests1 <- extractModel(1) #BM1 parameters
parests2 <- extractModel(2) #BMS parameters
parests3 <- extractModel(3) #OU1 parameters
parests4 <- extractModel(4) #OUM parameters
parests5 <- extractModel(5) #OUMV parameters
parests6 <- extractModel(6) #OUMA parameters
parests7 <- extractModel(7) #OUMVA parameters
parests8 <- extractModel(8) #OUV parameters (why isn't this one working?)
kable(parests1,caption = "BM1") #prints parameter estimates to a table
kable(parests2,caption = "BMS") #prints parameter estimates to a table
kable(parests3,caption = "OU1") #prints parameter estimates to a table
kable(parests4,caption = "OUM") #prints parameter estimates to a table
kable(parests5,caption = "OUMV") #prints parameter estimates to a table
kable(parests6,caption = "OUMA") #prints parameter estimates to a table
kable(parests7,caption = "OUMVA") #prints parameter estimates to a table
kable(parests8,caption = "OUV") #prints parameter estimates to a table
shiny::runApp('Courses/UyedaSpring2018/Phylogeny-Dice')
######
###This program can be run in R, available at http://www.r-project.org/###
###Copy and paste the function below into the R Console window###
evolve=function(string,N,mu=0.01,full=FALSE){
target=strsplit(toupper(string),"")[[1]]
L=c(LETTERS,setdiff(target,LETTERS))
tn=NULL
nos=1:length(L)
for(i in target){tn=c(tn,nos[L==i])}
mutate=function(x){
mu=rpois(1,mu*length(tn))
x[sample(1:length(x),mu)]=sample(nos,mu)
x
}
translate=function(y){
paste(L[y],sep="/n",collapse="")
}
hi=sample(nos,length(target),TRUE)
j=1
while(sum(hi==tn)<length(tn)){pop=replicate(N,mutate(hi))
fit=apply(tn==pop,2,sum)
hi=as.matrix(pop[,fit==max(fit)])[,1]
print(paste("Generation ", j," ", cat('\n'), paste(L[hi],sep="/n",collapse="")))
j=j+1
if (full==TRUE){
print(apply(pop,2,translate))
}
#Sys.sleep(0.1)
}
pop=replicate(N,mutate(hi))
fit=apply(tn==pop,2,sum)
hi=as.matrix(pop[,fit==max(fit)])[,1]
print(paste("Generation ", j," ", cat('\n'),paste(L[hi],sep="/n",collapse="")))
j=j+1
if (full==TRUE){
print(apply(pop,2,translate))
cat('\n')
}
}
#####
evolve("METHINKS IT IS LIKE A WEASEL",100)
evolve("METHINKS IT IS LIKE A WEASEL",100,mu=0.025)
evolve("METHINKS IT IS LIKE A WEASEL",100,mu=0.1)
evolve("METHINKS IT IS LIKE A WEASEL",10,mu=0.025,full=TRUE)
devtools::install_github("GuangchuangYu/treeio")
file <- system.file("extdata/BEAST", "beast_mcc.tree", package="treeio")
file
library(testthat)
installed.packages("testthat")
install.packages(testthat)
install.packages('testthat')
library(testthat)
library(treeio)
devtools::install_github("GuangchuangYu/treeio")
devtools::install_github("GuangchuangYu/treeio")
midi <-read.csv("~/Courses/UyedaSpring2018/opscan/GradesMidtermI.csv")
midi
midi <-read.csv("~/Courses/UyedaSpring2018/opscan/GradesMidtermI.csv", header=FALSE)
midi
quantile(midi$V4, c(0, 0.01, 0.025, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.975, 0.99, 1)
)
quantile(midi$V4, c(0, 0.01, 0.025, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.975, 0.99, 1))
quantile(midi$V4, c(0, 0.01, 0.025, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.975, 0.99, 1))/40
sum(midi$V4/40 < 60)
sum(midi$V4/40 < 0.60)
grade <- midi$V4/40*100
sum(midi$V4/40 < 0.60)
sum(midi$V4/40 >= 0.60 & midi$V4/40 < 0.70 )
sum(midi$V4/40 >= 0.70 & midi$V4/40 < 0.80)
sum(midi$V4/40 >= 0.80 & midi$V4/40 < 0.90)
sum(midi$V4/40 >= 0.90 & midi$V4/40 < 1.0)
grade <- (midi$V4/40+2)*100
sum(midi$V4/40 < 0.60)
sum(midi$V4/40 >= 0.60 & midi$V4/40 < 0.70 )
sum(midi$V4/40 >= 0.70 & midi$V4/40 < 0.80)
sum(midi$V4/40 >= 0.80 & midi$V4/40 < 0.90)
sum(midi$V4/40 >= 0.90 & midi$V4/40 < 1.0)
sum(grade/100 < 0.60)
sum(grade/100 >= 0.60 & grade/100 < 0.70 )
sum(grade/100 >= 0.70 & grade/100< 0.80)
sum(grade/100 >= 0.80 & grade/100 < 0.90)
sum(grade/100 >= 0.90 & grade/100 < 1.0)
grade
grade <- (midi$V4+2)/40*100
sum(grade/100 < 0.60)
sum(grade/100 >= 0.60 & grade/100 < 0.70 )
sum(grade/100 >= 0.70 & grade/100< 0.80)
sum(grade/100 >= 0.80 & grade/100 < 0.90)
sum(grade/100 >= 0.90 & grade/100 < 1.0)
quantile(grade, c(0, 0.01, 0.025, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.975, 0.99, 1))/40
quantile(grade, c(0, 0.01, 0.025, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.975, 0.99, 1))
max(grade)
grade <- (midi$V4+1)/40*100
sum(grade/100 < 0.60)
sum(grade/100 >= 0.60 & grade/100 < 0.70 )
sum(grade/100 >= 0.70 & grade/100< 0.80)
sum(grade/100 >= 0.80 & grade/100 < 0.90)
sum(grade/100 >= 0.90 & grade/100 < 1.0)
quantile(grade, c(0, 0.01, 0.025, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.975, 0.99, 1))
grade <- (midi$V4)/40*100
sum(grade/100 < 0.60)
sum(grade/100 >= 0.60 & grade/100 < 0.70 )
sum(grade/100 >= 0.70 & grade/100< 0.80)
sum(grade/100 >= 0.80 & grade/100 < 0.90)
sum(grade/100 >= 0.90 & grade/100 < 1.0)
quantile(grade, c(0, 0.01, 0.025, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.975, 0.99, 1))
grade <- (midi$V4+1)/40*100
sum(grade/100 < 0.60)
sum(grade/100 >= 0.60 & grade/100 < 0.70 )
sum(grade/100 >= 0.70 & grade/100< 0.80)
sum(grade/100 >= 0.80 & grade/100 < 0.90)
sum(grade/100 >= 0.90 & grade/100 < 1.0)
quantile(grade, c(0, 0.01, 0.025, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.975, 0.99, 1))
sum(grade/100 < 0.60)
sum(grade/100 >= 0.60 & grade/100 < 0.70 )
sum(grade/100 >= 0.70 & grade/100< 0.80)
sum(grade/100 >= 0.80 & grade/100 < 0.90)
sum(grade/100 >= 0.90 & grade/100 < 1.0)
?boxplot
options(max.print=50)
install.packages("geiger")
library(geiger)
library(geiger)
library(devtools)
library(geiger)
library(devtools)
library(treeplyr)
getwd()
dir.create("~/repos/SSBphylogenetics")
dir.create("~/repos/SSBphylogenetics/R")
dir.create("~/repos/SSBphylogenetics/data")
dir.create("~/repos/SSBphylogenetics/output")
setwd("~/repos/SSBphylogenetics/R/")
tree <- read.tree("../data/schenk.tre")
tree
plot(tree)
plot(tree, type="fan", cex=0.25)
plot(tree)
options(max.print=50)
tree <- read.tree("../data/schenk.tre")
library(geiger)
library(devtools)
library(treeplyr)
setwd("~/repos/SSBphylogenetics/R/")
tree <- read.tree("../data/schenk.tre")
tree
pantheria <- read.table("http://www.esapubs.org/archive/ecol/E090/184/PanTHERIA_1-0_WR05_Aug2008.txt",header=TRUE,sep="\t")
rownames(pantheria) <- gsub(" ", "_", pantheria$MSW05_Binomial)
head(pantheria)
td <- treedata(tree, pantheria)
td$data <- as.data.frame(td$data)
pantheria <- read.table("http://www.esapubs.org/archive/ecol/E090/184/PanTHERIA_1-0_WR05_Aug2008.txt",header=TRUE,sep="\t")
rownames(pantheria) <- gsub(" ", "_", pantheria$MSW05_Binomial)
head(pantheria)
td <- make.treedata(tree, pantheria)
td
tree
attributes(td)
attributes(td)$dropped
colnames(td$dat)
mutate(td, lnBMR=log(X18.1_BasalMetRate_mL02hr)) %>% select(., lnBMR)
mutate(td, lnBMR=log(X18.1_BasalMetRate_mLO2hr)) %>% select(., lnBMR)
mutate(td, lnBMR=log(X18.1_BasalMetRate_mLO2hr)) %>% filter(., !is.na(lnBMR)) %>% select(., lnBMR)
mutate(td, lnMass = log(X5.1_AdultBodyMass_g),lnBMR = log(X18.1_BasalMetRate_mLO2hr)) %>% filter(., !is.na(lnMass), !is.na(lnBMR)) %>% select(., lnMass, lnBMR)
mutate(td, lnMass = log(X5.1_AdultBodyMass_g),lnBMR = log(X18.1_BasalMetRate_mLO2hr)) %>% filter(., !is.na(lnMass), !is.na(lnBMR)) %>% select(., lnMass, lnBMR) %>% plot(.[['lnMass']], .[['lnBMR']])
mutate(td, lnMass = log(X5.1_AdultBodyMass_g),lnBMR = log(X18.1_BasalMetRate_mLO2hr)) %>% filter(., !is.na(lnMass), !is.na(lnBMR)) %>% select(., lnMass, lnBMR) %>% plot(.$dat$'lnMass', .$dat$'lnBMR')
mutate(td, lnMass = log(X5.1_AdultBodyMass_g),lnBMR = log(X18.1_BasalMetRate_mLO2hr)) %>% filter(., !is.na(lnMass), !is.na(lnBMR)) %>% select(., lnMass, lnBMR)
td2 <- mutate(td, lnMass = log(X5.1_AdultBodyMass_g),lnBMR = log(X18.1_BasalMetRate_mLO2hr)) %>% filter(., !is.na(lnMass), !is.na(lnBMR)) %>% select(., lnMass, lnBMR)
td2 <- mutate(td, lnMass = log(X5.1_AdultBodyMass_g),lnBMR = log(X18.1_BasalMetRate_mLO2hr)) %>% filter(., !is.na(lnMass), !is.na(lnBMR)) %>% select(., lnMass, lnBMR)
td2
plot(td2[['lnMass']], td2[['lnBMR']])
td2 <- mutate(td, lnMass = log(X5.1_AdultBodyMass_g),lnBMR = log(X18.1_BasalMetRate_mLO2hr), desert=ifelse(X28.1_Precip_Mean_mm < 21, 1, 0)) %>% filter(., !is.na(lnMass), !is.na(lnBMR)) %>% select(., lnMass, lnBMR, desert)
td2
plot(td2[['lnMass']], td2[['lnBMR']], pch=21, bg=td2[['desert']]+1)
plot(td2[['lnMass']], td2[['lnBMR']], pch=21, bg=td2[['desert']]+2)
plot(tree)
plot(tree, type="fan", cex=0.5)
plot(tree, show.tip.label=FALSE)
tiplabels(pch=21, bg=factor(dat$desert))
plot(tree)
plot(tree, type="fan", cex=0.5)
plot(tree, show.tip.label=FALSE)
tiplabels(pch=21, bg=td[['desert']]+2)
plot(td2$phy)
plot(td2$phy, type="fan", cex=0.5)
plot(td2$phy, show.tip.label=FALSE)
tiplabels(pch=21, bg=td2[['desert']]+1)
nodelabels(cex=0.75,bg="white" )
plot(td2$phy)
plot(td2$phy, type="fan", cex=0.5)
plot(td2$phy, type="fan", show.tip.label=FALSE)
tiplabels(pch=21, bg=td2[['desert']]+1)
nodelabels(cex=0.75,bg="white" )
require(phytools)
phenogram(td2$phy, td2[['lnMass']], spread.labels=FALSE)
tree <- td2$phy
dat <- td2$phy
plot(tree)
plot(tree, type="fan", cex=0.5)
plot(tree, type="fan", show.tip.label=FALSE)
tiplabels(pch=21, bg=dat[['desert']]+1)
nodelabels(cex=0.75,bg="white" )
tree <- td2$phy
dat <- td2$phy
plot(tree)
plot(tree, type="fan", cex=0.5)
plot(tree, type="fan", show.tip.label=FALSE)
tiplabels(pch=21, bg=dat$desert+1)
nodelabels(cex=0.75,bg="white" )
tree <- td2$phy
dat <- td2$dat
plot(tree)
plot(tree, type="fan", cex=0.5)
plot(tree, type="fan", show.tip.label=FALSE)
tiplabels(pch=21, bg=dat$desert+1)
nodelabels(cex=0.75,bg="white" )
require(phytools)
phenogram(tree, dat[['lnMass']], spread.labels=FALSE)
require(phytools)
phenogram(tree, setNames(dat[['lnMass']], tree$tip.label), spread.labels=FALSE)
picMass <- pic(dat$lnMass, tree)
plot(tree, cex=0.5)
nodelabels(pch=21, bg=topo.colors(100)[round((picMass-min(picMass))/diff(range(picMass))*100,0)])
picMass <- pic(dat$lnMass, tree)
plot(tree, cex=0.5)
nodelabels(pch=21, bg=topo.colors(100)[round((picMass-min(picMass))/diff(range(picMass))*100,0)])
times <- branching.times(tree)
plot(times, picMass)
times
picMass <- pic(dat$lnMass, tree)
plot(tree, cex=0.5)
nodelabels(pch=21, bg=topo.colors(100)[round((picMass-min(picMass))/diff(range(picMass))*100,0)])
times <- branching.times(tree)
plot(times, picMass, xlim=c(0, max(times)))
fancyDat <- as.matrix(dat[,1:3])
rownames(fancyDat) <- tree$tip.label
fancyTree(tree, type="scattergram", X=fancyDat, fsize=0.3)
tdDiscrete <- filter(td, !is.na(desert))
tdDiscrete <- filter(td2, !is.na(desert))
trait <- setNames(tdDiscrete$dat$desert, tdDiscrete$phy$tip.label)+1
mER <- fitDiscrete(tdDiscrete$phy, trait, model="ER")
mARD <- fitDiscrete(tdDiscrete$phy, trait, model="ARD")
mER
mARD
library(rotl)
taxalist <- c("Pseudomonas_aeruginosa", "Picoides_borealis", "Carpodacus_mexicana", "Hyla_regilla",
"Cambarincola", "Cambarus_chasmodactylus", "Pipra_filicauda", "Chrysopelia_paradisi",
"Cyanobacteria", "Brown anole", "Fruit bat", "Batrachochytrium_dendrobatidis",
"Taeniopygia_guttata", "Pseudogymnoascus_destructans", "Phaeognathus_hubrichti")
ottTable <- tnrs_match_names(taxalist)
ottTable
library(rotl)
taxalist <- c("Pseudomonas_aeruginosa", "Picoides_borealis", "Carpodacus_mexicana", "Hyla_regilla",
"Cambarincola", "Cambarus_chasmodactylus", "Pipra_filicauda", "Chrysopelia_paradisi",
"Cyanobacteria", "Norops_sagrei", "Carollia_perspicillata", "Piper peltatum", "Batrachochytrium_dendrobatidis", "Taeniopygia_guttata", "Pseudogymnoascus_destructans", "Phaeognathus_hubrichti")
ottTable <- tnrs_match_names(taxalist)
ottTable
library(rotl)
taxalist <- c("Pseudomonas_aeruginosa", "Picoides_borealis", "Carpodacus_mexicana", "Hyla_regilla",
"Cambarincola", "Cambarus_chasmodactylus", "Pipra_filicauda", "Chrysopelia_paradisi",
"Cyanobacteria", "Norops_sagrei", "Carollia_perspicillata", "Piper peltatum", "Batrachochytrium_dendrobatidis", "Taeniopygia_guttata", "Pseudogymnoascus_destructans", "Desmognathus_hubrichti")
library(rotl)
taxalist <- c("Pseudomonas_aeruginosa", "Picoides_borealis", "Carpodacus_mexicana", "Hyla_regilla",
"Cambarincola", "Cambarus_chasmodactylus", "Pipra_filicauda", "Chrysopelia_paradisi",
"Cyanobacteria", "Norops_sagrei", "Carollia_perspicillata", "Piper peltatum", "Batrachochytrium_dendrobatidis", "Taeniopygia_guttata", "Pseudogymnoascus_destructans", "Desmognathus_hubrichti", "Felis_domestica")
ottTable <- tnrs_match_names(taxalist)
ottTable
library(rotl)
taxalist <- c("Pseudomonas_aeruginosa", "Picoides_borealis", "Carpodacus_mexicana", "Hyla_regilla", "Lithobates_catesbeiana", "Cambarincola", "Cambarus_chasmodactylus", "Pipra_filicauda", "Chrysopelia_paradisi", "Cyanobacteria", "Norops_sagrei", "Carollia_perspicillata", "Piper peltatum", "Batrachochytrium_dendrobatidis", "Taeniopygia_guttata", "Pseudogymnoascus_destructans", "_hubrichti", "Malus_domestica", "Aedes_aegypti", "Plasmodium_vivax")
ottTable <- tnrs_match_names(taxalist)
ottTable
library(rotl)
taxalist <- c("Pseudomonas_aeruginosa", "Picoides_borealis", "Carpodacus_mexicana", "Hyla_regilla", "Lithobates_catesbeiana", "Cambarincola", "Cambarus_chasmodactylus", "Pipra_filicauda", "Chrysopelia_paradisi", "Cyanobacteria", "Norops_sagrei", "Carollia_perspicillata", "Piper peltatum", "Batrachochytrium_dendrobatidis", "Taeniopygia_guttata", "Pseudogymnoascus_destructans", "Plethodon_hubrichti", "Felis_domesticus", "Aedes_aegypti", "Plasmodium_vivax")
ottTable <- tnrs_match_names(taxalist)
ottTable
library(rotl)
taxalist <- c("Picoides_borealis", "Carpodacus_mexicana", "Hyla_regilla", "Lithobates_catesbeiana", "Cambarincola", "Cambarus_chasmodactylus", "Pipra_filicauda", "Chrysopelia_paradisi", "Cyanobacteria", "Norops_sagrei", "Carollia_perspicillata", "Piper peltatum", "Batrachochytrium_dendrobatidis", "Taeniopygia_guttata", "Pseudogymnoascus_destructans", "Plethodon_hubrichti", "Felus_domestica", "Aedes_aegypti", "Plasmodium_vivax")
ottTable <- tnrs_match_names(taxalist)
ottTable
synth_tree <- tol_induced_subtree(ottTable$ott_id)
ottTable
as.data.frame(ottTable)
data.frame(ottTable)
ottTable[13:20,]
ottTable[13:15,]
library(rotl)
taxalist <- c("Picoides_borealis", "Carpodacus_mexicana", "Hyla_regilla", "Lithobates_catesbeiana", "Cambarincola", "Cambarus_chasmodactylus", "Pipra_filicauda", "Chrysopelia_paradisi", "Cyanobacteria", "Norops_sagrei", "Carollia_perspicillata", "Piper peltatum", "Batrachochytrium", "Taeniopygia_guttata", "Pseudogymnoascus", "Plethodon_hubrichti", "Felus_domestica", "Aedes_aegypti", "Plasmodium_vivax")
ottTable <- tnrs_match_names(taxalist)
ottTable
synth_tree <- tol_induced_subtree(ottTable$ott_id)
library(rotl)
taxalist <- c("Picoides_borealis", "Carpodacus_mexicana", "Hyla_regilla", "Lithobates_catesbeiana", "Cambarincola", "Cambarus_chasmodactylus", "Pipra_filicauda", "Chrysopelia_paradisi", "Cyanobacteria", "Norops_sagrei", "Carollia_perspicillata", "Piper peltatum", "Taeniopygia_guttata", "Plethodon_hubrichti", "Felus_domestica", "Aedes_aegypti", "Plasmodium_vivax")
ottTable <- tnrs_match_names(taxalist)
ottTable
synth_tree <- tol_induced_subtree(ottTable$ott_id)
plot(synth_tree, type="fan", cex=0.5)
synth_tree <- tol_induced_subtree(ottTable$ott_id)
plot(synth_tree, cex=0.5)
synth_tree <- tol_induced_subtree(ottTable$ott_id)
plot(synth_tree, cex=0.75)
devtools::install_github("phylotastic/datelife")
devtools::install_github("phylotastic/datelife")
library(datelife)
datelife_result <- datelife::datelife_search(taxa)
taxa <- gsub(" ", "_", ottTable$unique_name)
datelife_result <- datelife::datelife_search(taxa)
datelife_result
get_datelife_result(taxa)
taxa <- gsub(" ", "_", ottTable$unique_name)
datelife_result <- datelife::datelife_search(taxa, summary_format = "newick.median")
taxa <- gsub(" ", "_", ottTable$unique_name)
datelife_result <- datelife::datelife_search(taxa)
datelife_result
attributes(datelife_result)
datelife_result
?datelife_search
ottTable$unique_name
taxa <- gsub(" ", "_", ottTable$unique_name)
datelife_result <- datelife::datelife_search(taxa[-c(5, 6, 9, 15)], summary_format="newick.median")
taxa[-c(5, 6, 9, 15)]
taxa <- gsub(" ", "_", ottTable$unique_name)
datelife_result <- datelife::datelife_search(taxa[-c(5, 6, 9, 15)])
datelife_result
taxa <- gsub(" ", "_", ottTable$unique_name)
datelife_result <- datelife::datelife_search(taxa)
datelife_result
get_datelife_result(taxa)
plot(datelife_result$`Hedges, S. Blair, Julie Marin, Michael Suleski, Madeline Paymer, Sudhir Kumar. 2015. Tree of life reveals clock-like speciation and diversification. Molecular Biology and Evolution 32 (4): 835-845`)
ctv
ctv::check_ctv_packages()
ctv::available.views()
dir.create("~/repos/Intro2PCMs/")
dir.create("~/repos/Intro2PCMs//R")
dir.create("~/repos/Intro2PCMs//data")
dir.create("~/repos/Intro2PCMs//output")
setwd("~/repos/Intro2PCMs/R/")
ex3a <- readRDS("../data/ex3a.rds")
phy <- ex3a$tree
trait <- ex3a$dat
try(fitContinuous(phy, trait, model="BM"))
library(geiger)
library(devtools)
library(treeplyr)
getwd()
dir.create("~/repos/Intro2PCMs/")
dir.create("~/repos/Intro2PCMs//R")
dir.create("~/repos/Intro2PCMs//data")
dir.create("~/repos/Intro2PCMs//output")
setwd("~/repos/Intro2PCMs/R/")
tree <- read.tree("../data/schenk.tre")
tree
plot(tree)
plot(tree, type="fan", cex=0.25)
ex3a <- readRDS("../data/ex3a.rds")
phy <- ex3a$tree
trait <- ex3a$dat
try(fitContinuous(phy, trait, model="BM"))
trait
phy
ex3b <- readRDS("../data/ex3b.rds")
phy <- ex3b$tree
trait <- ex3b$dat
try(phenogram(phy, trait[,1], spread.labels=FALSE))
library(phytools)
ex3b <- readRDS("../data/ex3b.rds")
phy <- ex3b$tree
trait <- ex3b$dat
try(phenogram(phy, trait[,1], spread.labels=FALSE))
ex3b <- readRDS("../data/ex3b.rds")
phy <- ex3b$tree
trait <- ex3b$dat
try(phenogram(phy, trait[,1], spread.labels=FALSE))
icterus <-  read.table("../data/icterus.dat", header=TRUE, sep="\t")
icterus.trees <- read.nexus("../data/icterus.tre")
icterus.trees
icterus
install.packages("geiger")
install.packages("treeplyr")
library(geiger)
library(treeplyr)
library(ctv)
ctv::available.views()
getwd()
dir.create("~/repos/Intro2PCMs/")
dir.create("~/repos/Intro2PCMs/R")
dir.create("~/repos/Intro2PCMs/output")
dir.create("~/repos/Intro2PCMs/data")
setwd("~/repos/Intro2PCMs/R")
tree <- read.tree("../data/schenk.tre")
tree <- read.tree("../data/schenk.tre")
tree
plot(tree)
plot(tree)
plot(tree, type="fan", cex=0.25)
?plot
methods(plot)
class(tree)
?plot.phylo
str(tree)
tree$tip.label
tree$tip.label
tree[['tip.label']]
tree[[4]]
tree$tip.label
tree$edge.length
tree$edge
tree
drop.tip(tree, c(1,2))
tree
drop.tip(tree, "Sciurus_sp")
tree
drop.tip(tree, "Sciurus_sp.")
library(treeplyr)
pantheria <- read.table("http://esapubs.org/archive/ecol/e090/184/PanTHERIA_1-0_WR05_Aug2008.txt", header=TRUE, sep="\t")
head(pantheria)
pantheria
colnames(pantheria)
pantheria$MSW05_Binomial
gsub(" ", "_", pantheria$MSW05_Binomial)
rownames(pantheria) <- gsub(" ", "_", pantheria$MSW05_Binomial)
td <- make.treedata(tree, pantheria)
td <- make.treedata(tree, pantheria)
td
attributes(td)$dropped
colnames(td$dat)
td2 <- mutate(td, lnMass = log(X5.1_AdultBodyMass_g), lnBMR=log(X18.1_BasalMetRate_mLO2hr)) %>% select(., lnMass, lnBMR)
td2 <- mutate(td, lnMass = log(X5.1_AdultBodyMass_g), lnBMR=log(X18.1_BasalMetRate_mLO2hr)) %>% select(., lnMass, lnBMR)
td2
td2 <- mutate(td, lnMass = log(X5.1_AdultBodyMass_g), lnBMR=log(X18.1_BasalMetRate_mLO2hr)) %>% filter(., !is.na(lnMass), !is.na(lnBMR)) %>% select(., lnMass, lnBMR)
td2
td2 <- mutate(td, lnMass = log(X5.1_AdultBodyMass_g), lnBMR=log(X18.1_BasalMetRate_mLO2hr), desert=ifelse(X28.1_Precip_Mean_mm < 21, 1, 0)) %>% filter(., !is.na(lnMass), !is.na(lnBMR)) %>% select(., lnMass, lnBMR, desert)
td2
plot(td2[['lnMass']], td2[['lnBMR']], pch=21, bg=td2[['desert']]+2)
plot(td2[['lnMass']], td2[['lnBMR']], pch=21, col=td2[['desert']]+2)
plot(td2[['lnMass']], td2[['lnBMR']], pch=21, col=td2[['desert']]+2, bg=td2[['desert']]+2)
tree <- td2$phy
dat <- td2$dat
plot(tree)
plot(tree, type="fan", cex=0.5)
plot(tree, type="fan", show.tip.labels=FALSE)
plot(tree)
plot(tree, type="fan", cex=0.5)
plot(tree, type="fan", show.tip.label=FALSE)
plot(tree)
plot(tree, type="fan", cex=0.5)
plot(tree, type="fan", show.tip.label=FALSE)
tiplabels(pch=21, bg=dat$desert + 2)
plot(tree)
plot(tree, type="fan", cex=0.5)
plot(tree, type="fan", show.tip.label=FALSE)
tiplabels(pch=21, bg=dat$desert + 2)
nodelabels()
library(phytools)
phenogram(tree, dat[['lnMass']])
library(phytools)
phenogram(tree, setNames(dat[['lnMass']], tree$tip.label), spread.labels=FALSE)
tree <- td2$phy
dat <- td2$dat
plot(tree)
plot(tree, type="fan", cex=0.5)
plot(tree, type="fan", show.tip.label=FALSE)
tiplabels(pch=21, bg=dat$desert + 2)
nodelabels()
library(phytools)
phenogram(tree, setNames(dat[['lnMass']], tree$tip.label), spread.labels=FALSE)
setNames(dat[['lnMass']], tree$tip.label)
fancyDat <- as.matrix(dat[,1:3])
rownames(fancyDat) <- tree$tip.label
fancyTree(tree, type="scattergram", X=fancyDat, fsize=0.3)
picMass <- pic(dat$lnMass, tree)
plot(tree, cex=0.5)
nodelabels(pch=21, bg=topo.colors(100)[round((picMass-min(picMass))/diff(range(picMass))*100,0)])
tree
tree$edge.length
#install.packages("rotl")
library("rotl")
taxalist <- c("Picoides_borealis", "Carpodacus_mexicana", "Hyla_regilla", "Lithobates_catesbeiana", "Cambarincola", "Cambarus_chasmodactylus", "Pipra_filicauda", "Chrysopelia_paradisi", "Cyanobacteria", "Norops_sagrei", "Carollia_perspicillata", "Piper peltatum", "Taeniopygia_guttata", "Plethodon_hubrichti", "Felus_domestica", "Aedes_aegypti", "Plasmodium_vivax")
ottTable <- tnrs_match_names(taxalist)
